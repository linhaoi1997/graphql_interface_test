{
  "uid" : "1b90d2bbea73dc2e",
  "name" : "test_1",
  "fullName" : "interface.Role_test.test_deleteRoles.TestDeleteRoles#test_1",
  "historyId" : "c2c5295034e2e0e1415681d8336d6d3a",
  "time" : {
    "start" : 1600227952661,
    "stop" : 1600227953007,
    "duration" : 346
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_deleteRoles.TestDeleteRoles object at 0x10b9ef550>\nresource = <support.base_test.ResourceLoader.ResourceLoader object at 0x109eb1c18>\ncreate_id = <function create_id.<locals>._create_id at 0x10b9dd488>\n\n    @allure.story(\"删除3个\")\n    def test_1(self, resource, create_id):\n        _ids = create_id(self.create_name, 3, self.resource_name)\n    \n        variable = {\n            \"input\": {\"ids\": _ids}\n        }\n        user = resource.simple_user\n        result = user.send_request(self.query_name, variable).result\n>       self.assertDelete(variable, result)\n\ninterface/Role_test/test_deleteRoles.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsupport/base_test/AssertMethod.py:160: in assertDelete\n    self.assertIds(variables, result)\nsupport/base_test/AssertMethod.py:114: in assertIds\n    self.assertCorrect(result)\nsupport/base_test/AssertMethod.py:128: in assertCorrect\n    self.assertJsonResponseEqual(\"$..errors\", result, None)\nsupport/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_deleteRoles.TestDeleteRoles object at 0x10b9ef550>, value = None\nresult = [{'locations': [{'column': 5, 'line': 2}], 'message': 'Cannot return null for non-nullable field Mutation.deleteRoles.', 'path': ['deleteRoles']}]\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\nsupport/base_test/AssertMethod.py:94: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "init",
    "time" : {
      "start" : 1600227952218,
      "stop" : 1600227952218,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1600227952116,
      "stop" : 1600227952218,
      "duration" : 102
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "create_id",
    "time" : {
      "start" : 1600227952661,
      "stop" : 1600227952661,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "resource",
    "time" : {
      "start" : 1600227952218,
      "stop" : 1600227952218,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_deleteRoles.TestDeleteRoles object at 0x10b9ef550>\nresource = <support.base_test.ResourceLoader.ResourceLoader object at 0x109eb1c18>\ncreate_id = <function create_id.<locals>._create_id at 0x10b9dd488>\n\n    @allure.story(\"删除3个\")\n    def test_1(self, resource, create_id):\n        _ids = create_id(self.create_name, 3, self.resource_name)\n    \n        variable = {\n            \"input\": {\"ids\": _ids}\n        }\n        user = resource.simple_user\n        result = user.send_request(self.query_name, variable).result\n>       self.assertDelete(variable, result)\n\ninterface/Role_test/test_deleteRoles.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsupport/base_test/AssertMethod.py:160: in assertDelete\n    self.assertIds(variables, result)\nsupport/base_test/AssertMethod.py:114: in assertIds\n    self.assertCorrect(result)\nsupport/base_test/AssertMethod.py:128: in assertCorrect\n    self.assertJsonResponseEqual(\"$..errors\", result, None)\nsupport/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_deleteRoles.TestDeleteRoles object at 0x10b9ef550>, value = None\nresult = [{'locations': [{'column': 5, 'line': 2}], 'message': 'Cannot return null for non-nullable field Mutation.deleteRoles.', 'path': ['deleteRoles']}]\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\nsupport/base_test/AssertMethod.py:94: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "521be8fdc945d768",
      "name" : "log",
      "source" : "521be8fdc945d768.txt",
      "type" : "text/plain",
      "size" : 6692
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "deleteRoles"
  }, {
    "name" : "epic",
    "value" : "Role"
  }, {
    "name" : "story",
    "value" : "删除3个"
  }, {
    "name" : "parentSuite",
    "value" : "interface.Role_test"
  }, {
    "name" : "suite",
    "value" : "test_deleteRoles"
  }, {
    "name" : "subSuite",
    "value" : "TestDeleteRoles"
  }, {
    "name" : "host",
    "value" : "MacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "99506-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "interface.Role_test.test_deleteRoles"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "1b90d2bbea73dc2e.json",
  "parameterValues" : [ ]
}