{"name": "test_6[audit_feed_reject]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <interface.workFlow_test.test_thingMaintanenceFlow.TestThingMaintenanceWorkFlow object at 0x10bd08940>\naction = 'audit_feed_reject'\n\n    @pytest.mark.parametrize(\"action\", test_data)\n    @allure.story(\"保养完成不允许的操作\")\n    def test_6(self, action):\n        thing_maintenance_id = self.simple_user.create_thing_maintenance()\n        # 提交审核->审核中\n>       self.simple_user.feed(thing_maintenance_id)\n\ntest_thingMaintanenceFlow.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_thingMaintanenceFlow.py:93: in feed\n    self.assertJsonResponseEqual(\"$..status\", result, \"UNDERREVIEW\")\n../../support/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <interface.workFlow_test.test_thingMaintanenceFlow.ThingMaintenanceUser object at 0x10b46c7b8>\nvalue = 'UNDERREVIEW', result = None\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\n../../support/base_test/AssertMethod.py:94: AssertionError"}, "attachments": [{"name": "log", "source": "f3544b8d-da80-4f2c-845f-5fab02f4b511-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "action", "value": "'audit_feed_reject'"}], "start": 1600231706942, "stop": 1600231711931, "uuid": "a201b39c-5f10-4cbd-9659-0b022d543874", "historyId": "382180b765083fb1a9e1b8f556511f67", "testCaseId": "712003e4979a650ace5f13f5f36c0932", "fullName": "interface.workFlow_test.test_thingMaintanenceFlow.TestThingMaintenanceWorkFlow#test_6", "labels": [{"name": "story", "value": "保养完成不允许的操作"}, {"name": "feature", "value": "ThingMaintenanceWorkFlow"}, {"name": "epic", "value": "workflow"}, {"name": "parentSuite", "value": "interface.workFlow_test"}, {"name": "suite", "value": "test_thingMaintanenceFlow"}, {"name": "subSuite", "value": "TestThingMaintenanceWorkFlow"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "1068-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.workFlow_test.test_thingMaintanenceFlow"}]}