{"name": "test_2", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <interface.workFlow_test.test_thingMaintanenceFlow.TestThingMaintenanceWorkFlow object at 0x10b84e2b0>\n\n    @allure.story(\"保养中--反馈->审核中--审核拒绝->保养中--再次反馈->审核中--审核通过->保养完成\")\n    def test_2(self):\n        thing_maintenance_id = self.simple_user.create_thing_maintenance()\n        # 反馈\n>       self.simple_user.feed(thing_maintenance_id)\n\ntest_thingMaintanenceFlow.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_thingMaintanenceFlow.py:93: in feed\n    self.assertJsonResponseEqual(\"$..status\", result, \"UNDERREVIEW\")\n../../support/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <interface.workFlow_test.test_thingMaintanenceFlow.ThingMaintenanceUser object at 0x10b46c7b8>\nvalue = 'UNDERREVIEW', result = None\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\n../../support/base_test/AssertMethod.py:94: AssertionError"}, "attachments": [{"name": "log", "source": "6754e549-6465-4129-a481-5c7d93bdfe90-attachment.txt", "type": "text/plain"}], "start": 1600231651171, "stop": 1600231656041, "uuid": "6099fe92-d17b-4bec-bb9c-59e1ff22c4d0", "historyId": "7b1d6eaf96e35420dd7097eff1271e2f", "testCaseId": "88dfffcf0df7147341e06427b9f367d0", "fullName": "interface.workFlow_test.test_thingMaintanenceFlow.TestThingMaintenanceWorkFlow#test_2", "labels": [{"name": "story", "value": "保养中--反馈->审核中--审核拒绝->保养中--再次反馈->审核中--审核通过->保养完成"}, {"name": "feature", "value": "ThingMaintenanceWorkFlow"}, {"name": "epic", "value": "workflow"}, {"name": "parentSuite", "value": "interface.workFlow_test"}, {"name": "suite", "value": "test_thingMaintanenceFlow"}, {"name": "subSuite", "value": "TestThingMaintenanceWorkFlow"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "1068-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.workFlow_test.test_thingMaintanenceFlow"}]}