{"name": "test_1", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <interface.workFlow_test.test_sparePartOutboundFlow.TestSparePartOutBoundWorkFlow object at 0x10eacda58>\n\n    @allure.story(\"申领->待审核->审核通过->申领完成\")\n    def test_1(self):\n        spare_part_outbound_id = self.simple_user.create_spare_part_outbound()\n        # 第一次审核通过\n>       self.simple_user.audit_pass(spare_part_outbound_id)\n\ninterface/workFlow_test/test_sparePartOutboundFlow.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ninterface/workFlow_test/test_sparePartOutboundFlow.py:61: in audit_pass\n    self.assertJsonResponseEqual(\"$..status\", result, \"APPROVED\")\nsupport/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <interface.workFlow_test.test_sparePartOutboundFlow.ThingRepairUser object at 0x10b89e438>\nvalue = 'APPROVED', result = None\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\nsupport/base_test/AssertMethod.py:94: AssertionError"}, "attachments": [{"name": "log", "source": "2945704f-8258-4e17-bfa6-e60f0e8cb3bc-attachment.txt", "type": "text/plain"}], "start": 1600228363229, "stop": 1600228369748, "uuid": "6ee4513e-bcb6-4731-814c-d2b31a62e16a", "historyId": "1c1aed3db5013485657f725b9a94eeac", "testCaseId": "a1e94007c0184cd6350398a56316ffb3", "fullName": "interface.workFlow_test.test_sparePartOutboundFlow.TestSparePartOutBoundWorkFlow#test_1", "labels": [{"name": "epic", "value": "workflow"}, {"name": "feature", "value": "SparePartOutBoundWorkFlow"}, {"name": "story", "value": "申领->待审核->审核通过->申领完成"}, {"name": "parentSuite", "value": "interface.workFlow_test"}, {"name": "suite", "value": "test_sparePartOutboundFlow"}, {"name": "subSuite", "value": "TestSparePartOutBoundWorkFlow"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "99506-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.workFlow_test.test_sparePartOutboundFlow"}]}