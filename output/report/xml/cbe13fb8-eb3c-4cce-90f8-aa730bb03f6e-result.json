{"name": "test_3", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <interface.workFlow_test.test_thingInspectionFlow.TestThingInspectionWorkFlow object at 0x10b672550>\n\n    @allure.story(\"审核拒绝->再次反馈 循环5次\")\n    def test_3(self):\n        thing_inspection_id = self.simple_user.create_thing_inspection()\n    \n        def circulation(n):\n            for i in range(n):\n                # 反馈\n                self.simple_user.feed(thing_inspection_id)\n                self.simple_user.audit_commit(thing_inspection_id)\n                # 审核拒绝\n                self.simple_user.audit_feed_reject(thing_inspection_id)\n    \n>       circulation(5)\n\ntest_thingInspectionFlow.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_thingInspectionFlow.py:165: in circulation\n    self.simple_user.feed(thing_inspection_id)\ntest_thingInspectionFlow.py:119: in feed\n    self.assertJsonResponseEqual(\"$..status\", self.result, \"INPROGRESS\")\n../../support/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <interface.workFlow_test.test_thingInspectionFlow.ThingInspectionUser object at 0x10b442fd0>\nvalue = 'INPROGRESS', result = None\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\n../../support/base_test/AssertMethod.py:94: AssertionError"}, "attachments": [{"name": "log", "source": "6ad97d57-1c0a-4a25-9489-e111f58806bd-attachment.txt", "type": "text/plain"}], "start": 1600231195415, "stop": 1600231197502, "uuid": "d8d791c2-8bb9-40f6-82f5-e109ce74d7dd", "historyId": "0866fc1ba881b6f33cf531efc7b950bb", "testCaseId": "1bbef2dd4955583c68063aa123cdd55c", "fullName": "interface.workFlow_test.test_thingInspectionFlow.TestThingInspectionWorkFlow#test_3", "labels": [{"name": "feature", "value": "ThingInspectionWorkFlow"}, {"name": "story", "value": "审核拒绝->再次反馈 循环5次"}, {"name": "epic", "value": "workflow"}, {"name": "parentSuite", "value": "interface.workFlow_test"}, {"name": "suite", "value": "test_thingInspectionFlow"}, {"name": "subSuite", "value": "TestThingInspectionWorkFlow"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "829-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.workFlow_test.test_thingInspectionFlow"}]}