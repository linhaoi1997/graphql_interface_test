{"name": "test_query_thing", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_querySparePartOutbound.TestQuerySparePartOutbound object at 0x10b9cae10>\nresource = <support.base_test.ResourceLoader.ResourceLoader object at 0x109eb1c18>\ncreate_id = <function create_id.<locals>._create_id at 0x10ba4d488>\n\n    @allure.story(\"正确查询\")\n    def test_query_thing(self, resource, create_id):\n        _id, verify_variables = create_id(self.create_name, 1, self.resource_name, return_type=\"variable\")\n        user = resource.simple_user\n        variables = {\n            \"id\": _id\n        }\n        result = user.send_request(self.query_name, variables).result\n>       self.assertForm(verify_variables, result)\n\ninterface/sparePartOutBound_test/test_querySparePartOutbound.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsupport/base_test/AssertMethod.py:124: in assertForm\n    self.assertEveryParam(variables, result)\nsupport/base_test/AssertMethod.py:80: in assertEveryParam\n    self.assertJsonResponseEqual(i, result, deepest_dict[i])\nsupport/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_querySparePartOutbound.TestQuerySparePartOutbound object at 0x10b9cae10>\nvalue = 1, result = None\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n>               assert None\nE               AssertionError\n\nsupport/base_test/AssertMethod.py:90: AssertionError"}, "attachments": [{"name": "log", "source": "5033f60a-5ef2-457d-9f28-c2fb3cf82060-attachment.txt", "type": "text/plain"}], "start": 1600227974677, "stop": 1600227976030, "uuid": "35751df7-cca8-4e4f-984f-d6f71ad5a02c", "historyId": "e16b608a5d13466b5c652a155db58ba2", "testCaseId": "e3f14f0f9594bc6049196b0ddb76ce28", "fullName": "interface.sparePartOutBound_test.test_querySparePartOutbound.TestQuerySparePartOutbound#test_query_thing", "labels": [{"name": "feature", "value": "querySparePartOutbound"}, {"name": "epic", "value": "sparePartOutBound"}, {"name": "story", "value": "正确查询"}, {"name": "parentSuite", "value": "interface.sparePartOutBound_test"}, {"name": "suite", "value": "test_querySparePartOutbound"}, {"name": "subSuite", "value": "TestQuerySparePartOutbound"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "99506-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.sparePartOutBound_test.test_querySparePartOutbound"}]}