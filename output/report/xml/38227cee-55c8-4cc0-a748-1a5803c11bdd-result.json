{"name": "test_2", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <interface.workFlow_test.test_sparePartOutboundFlow.TestSparePartOutBoundWorkFlow object at 0x10a9ee8d0>\n\n    @allure.story(\"申领->待审核->审核拒绝->拒绝->重新编辑->审核通过->完成\")\n    def test_2(self):\n        spare_part_outbound_id = self.simple_user.create_spare_part_outbound()\n        # 第一次审核拒绝\n        self.simple_user.audit_reject(spare_part_outbound_id)\n        # 重新编辑提交\n>       self.simple_user.re_submit(spare_part_outbound_id)\n\ninterface/workFlow_test/test_sparePartOutboundFlow.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ninterface/workFlow_test/test_sparePartOutboundFlow.py:93: in re_submit\n    self.assertJsonResponseEqual(\"$..status\", result, \"PENDING\")\nsupport/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <interface.workFlow_test.test_sparePartOutboundFlow.ThingRepairUser object at 0x10b89e438>\nvalue = 'PENDING', result = None\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\nsupport/base_test/AssertMethod.py:94: AssertionError"}, "attachments": [{"name": "log", "source": "07ec41d9-bd80-443c-9317-3e965a4562a5-attachment.txt", "type": "text/plain"}], "start": 1600228369769, "stop": 1600228381469, "uuid": "a81844d5-2613-41a3-a0b5-55465fd901c1", "historyId": "f3bb96b23e5bb2e24a0ecad736608c73", "testCaseId": "0b05a87b84033a9e014460648a23e69a", "fullName": "interface.workFlow_test.test_sparePartOutboundFlow.TestSparePartOutBoundWorkFlow#test_2", "labels": [{"name": "feature", "value": "SparePartOutBoundWorkFlow"}, {"name": "story", "value": "申领->待审核->审核拒绝->拒绝->重新编辑->审核通过->完成"}, {"name": "epic", "value": "workflow"}, {"name": "parentSuite", "value": "interface.workFlow_test"}, {"name": "suite", "value": "test_sparePartOutboundFlow"}, {"name": "subSuite", "value": "TestSparePartOutBoundWorkFlow"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "99506-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.workFlow_test.test_sparePartOutboundFlow"}]}