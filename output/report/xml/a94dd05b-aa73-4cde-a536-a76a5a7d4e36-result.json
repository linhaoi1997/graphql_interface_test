{"name": "test_1", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <interface.workFlow_test.test_thingInspectionFlow.TestThingInspectionWorkFlow object at 0x10b473208>\n\n    @allure.story(\"巡检中->反馈->审核中->审核通过->巡检完成\")\n    def test_1(self):\n        thing_inspection_id = self.simple_user.create_thing_inspection()\n        # 反馈\n>       self.simple_user.feed(thing_inspection_id)\n\ntest_thingInspectionFlow.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_thingInspectionFlow.py:119: in feed\n    self.assertJsonResponseEqual(\"$..status\", self.result, \"INPROGRESS\")\n../../support/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <interface.workFlow_test.test_thingInspectionFlow.ThingInspectionUser object at 0x10b442fd0>\nvalue = 'INPROGRESS', result = None\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\n../../support/base_test/AssertMethod.py:94: AssertionError"}, "attachments": [{"name": "log", "source": "bebc5059-75e2-4aed-8128-43ec52f7fdb5-attachment.txt", "type": "text/plain"}], "start": 1600231189444, "stop": 1600231191710, "uuid": "f081e60f-225e-47e7-9264-9547b87bd04b", "historyId": "82cd4a4a1263fbd4403c1c3f1ff78c6f", "testCaseId": "eaa424c953b94c085e5ed110c4ccb39e", "fullName": "interface.workFlow_test.test_thingInspectionFlow.TestThingInspectionWorkFlow#test_1", "labels": [{"name": "story", "value": "巡检中->反馈->审核中->审核通过->巡检完成"}, {"name": "feature", "value": "ThingInspectionWorkFlow"}, {"name": "epic", "value": "workflow"}, {"name": "parentSuite", "value": "interface.workFlow_test"}, {"name": "suite", "value": "test_thingInspectionFlow"}, {"name": "subSuite", "value": "TestThingInspectionWorkFlow"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "829-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.workFlow_test.test_thingInspectionFlow"}]}