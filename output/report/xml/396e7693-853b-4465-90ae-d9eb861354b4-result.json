{"name": "test_query_thing", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_queryEmployees.TestQueryEmployees object at 0x10ba954e0>\nresource = <support.base_test.ResourceLoader.ResourceLoader object at 0x109eb1c18>\ncreate_id = <function create_id.<locals>._create_id at 0x10ba84620>\n\n    @allure.story(\"正确查询\")\n    def test_query_thing(self, resource, create_id):\n        _ids = create_id(self.create_name, 3, self.resource_name, return_type=\"id\")\n        user = resource.simple_user\n        variables = {\"offset\": 0, \"limit\": 3,\n                     \"filter\": {\"department\": {\"id\": 1}, \"containSubsidiaries\": True},\n                     \"orderBy\": [\"+updated_at\"]\n                     }  # 分页查询一个\n        result = user.send_request(self.query_name, variables).result\n>       self.assertQuerys(_ids, result)\n\ninterface/employee_test/test_queryEmployees.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsupport/base_test/AssertMethod.py:143: in assertQuerys\n    self.assertIds_query(_ids, result)\nsupport/base_test/AssertMethod.py:119: in assertIds_query\n    self.assertJsonResponseEqual(\"$..\" + self.query_name + \".data[*].id\", result, variables)\nsupport/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_queryEmployees.TestQueryEmployees object at 0x10ba954e0>\nvalue = [7, 8, 9], result = [1, 2, 3]\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n>           assert format_number(value) == format_number(result)\nE           AssertionError\n\nsupport/base_test/AssertMethod.py:92: AssertionError"}, "attachments": [{"name": "log", "source": "03494eb6-6812-4cbb-9062-e89eaf8175ef-attachment.txt", "type": "text/plain"}], "start": 1600227956043, "stop": 1600227958552, "uuid": "4f704b51-d2e1-4559-ae53-56cf5d2b23a8", "historyId": "6b1ffbfa3b4c16c59aa417732bb477a4", "testCaseId": "9edb0f3f55fd4cd5e5e2b4a3ddfaa350", "fullName": "interface.employee_test.test_queryEmployees.TestQueryEmployees#test_query_thing", "labels": [{"name": "epic", "value": "employee"}, {"name": "story", "value": "正确查询"}, {"name": "feature", "value": "queryEmployees"}, {"name": "parentSuite", "value": "interface.employee_test"}, {"name": "suite", "value": "test_queryEmployees"}, {"name": "subSuite", "value": "TestQueryEmployees"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "99506-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.employee_test.test_queryEmployees"}]}