{"name": "test_7[update]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <interface.workFlow_test.test_thingInspectionFlow.TestThingInspectionWorkFlow object at 0x10c54e4e0>\naction = 'update'\n\n    @pytest.mark.parametrize(\"action\", test_data)\n    @allure.story(\"巡检完成不允许的操作\")\n    def test_7(self, action):\n        thing_inspection_id = self.simple_user.create_thing_inspection()\n        # 反馈->审核中\n>       self.simple_user.feed(thing_inspection_id)\n\ntest_thingInspectionFlow.py:226: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_thingInspectionFlow.py:119: in feed\n    self.assertJsonResponseEqual(\"$..status\", self.result, \"INPROGRESS\")\n../../support/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <interface.workFlow_test.test_thingInspectionFlow.ThingInspectionUser object at 0x10b442fd0>\nvalue = 'INPROGRESS', result = None\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\n../../support/base_test/AssertMethod.py:94: AssertionError"}, "attachments": [{"name": "log", "source": "fbe2d6dc-1fd6-43d1-b1f2-4cb12971f58f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "action", "value": "'update'"}], "start": 1600231221745, "stop": 1600231224101, "uuid": "9ff4f852-89f7-41e6-aa84-bd45ac470206", "historyId": "8e944ab576ad939c998493c1e813a93e", "testCaseId": "6643c6f76d9d3af61d4181d381acf4b3", "fullName": "interface.workFlow_test.test_thingInspectionFlow.TestThingInspectionWorkFlow#test_7", "labels": [{"name": "story", "value": "巡检完成不允许的操作"}, {"name": "feature", "value": "ThingInspectionWorkFlow"}, {"name": "epic", "value": "workflow"}, {"name": "parentSuite", "value": "interface.workFlow_test"}, {"name": "suite", "value": "test_thingInspectionFlow"}, {"name": "subSuite", "value": "TestThingInspectionWorkFlow"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "829-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.workFlow_test.test_thingInspectionFlow"}]}