{"name": "test_1_0", "status": "broken", "statusDetails": {"message": "TypeError: 'bool' object is not subscriptable", "trace": "self = <interface.workFlow_test.test_thingInspectionFlow.TestThingInspectionWorkFlow object at 0x109f6e390>\n\n    @allure.story(\"待巡检--编辑->待巡检\")\n    def test_1_0(self):\n>       thing_maintenance_id = self.simple_user.create_thing_inspection(delay=10)\n\ninterface/workFlow_test/test_thingInspectionFlow.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <interface.workFlow_test.test_thingInspectionFlow.ThingInspectionUser object at 0x10b89e400>\ndelay = 10\n\n    def create_thing_inspection(self, delay=0):\n        query_name = \"createThingInspection\"\n        variables = {\n            \"input\": {\n                \"rule\": {\"id\": RULE_ID},\n                \"operator\": OPERATOR,\n                \"startAt\": create_timestamp(delay),\n                \"things\": THINGS\n            }\n        }\n>       thing_inspection_id = self.user(query_name, variables).find_result(\"$..id\")[0]\nE       TypeError: 'bool' object is not subscriptable\n\ninterface/workFlow_test/test_thingInspectionFlow.py:33: TypeError"}, "attachments": [{"name": "log", "source": "1b4d3394-4c71-4e69-9b12-671fa3546b8a-attachment.txt", "type": "text/plain"}], "start": 1600228428816, "stop": 1600228428906, "uuid": "1a92c15c-4c26-4053-b3b2-d178dfdbfeff", "historyId": "6da10feddc5072da1fadfdf016cda031", "testCaseId": "22e9fe988dcb84e94d2db02f9b3cb80b", "fullName": "interface.workFlow_test.test_thingInspectionFlow.TestThingInspectionWorkFlow#test_1_0", "labels": [{"name": "epic", "value": "workflow"}, {"name": "story", "value": "待巡检--编辑->待巡检"}, {"name": "feature", "value": "ThingInspectionWorkFlow"}, {"name": "parentSuite", "value": "interface.workFlow_test"}, {"name": "suite", "value": "test_thingInspectionFlow"}, {"name": "subSuite", "value": "TestThingInspectionWorkFlow"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "99506-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.workFlow_test.test_thingInspectionFlow"}]}