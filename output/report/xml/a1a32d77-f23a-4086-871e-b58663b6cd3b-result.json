{"name": "test_1[variable0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_updateSparePartOutbound.TestUpdateSparePartOutbound object at 0x10bb29358>\nvariable = {'input': {'addition': '[{\"key\": \"7d2f6d619a954f64b6fd763335b479b1\", \"value\": \"\\\\u5355\\\\u884c\\\\u6587\\\\u5b57_q36of\"}, {...': 3}}, {'number': 1, 'reason': 'reason_nlcdx', 'sparePart': {'id': 1}}], 'factory': 'factory_5088f', 'id': '12', ...}}\nresource = <support.base_test.ResourceLoader.ResourceLoader object at 0x109eb1c18>\ncreate_id = <function create_id.<locals>._create_id at 0x10ba4da60>\n\n    @allure.story(\"所有项完整\")\n    @pytest.mark.parametrize(\"variable\", interface.generate(\"generate_all_params\", **BaseTestCase.all_param))\n    def test_1(self, variable, resource, create_id):\n        # 创建一个id以修改\n        _id, _ = create_id(self.create_name, 1, self.resource_name, return_type=\"variable\")\n        variable['input'][\"id\"] = _id\n        # 使用创建的id\n        user = resource.simple_user\n        result = user.send_request(self.query_name, variable).result\n>       self.assertForm(variable, result)\n\ninterface/sparePartOutBound_test/test_updateSparePartOutbound.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsupport/base_test/AssertMethod.py:123: in assertForm\n    self.assertCorrect(result)\nsupport/base_test/AssertMethod.py:128: in assertCorrect\n    self.assertJsonResponseEqual(\"$..errors\", result, None)\nsupport/base_test/AssertMethod.py:23: in assertJsonResponseEqual\n    self.assertEqual(value, result)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_updateSparePartOutbound.TestUpdateSparePartOutbound object at 0x10bb29358>\nvalue = None\nresult = [{'extensions': {'code': 'APOLLO_ERROR'}, 'locations': [{'column': 5, 'line': 2}], 'message': '当前备件申领单不支持此操作', 'path': ['updateSparePartOutbound']}]\n\n    def assertEqual(self, value, result):\n        if type(value) == str and value.isdigit():\n            if type(result) in (str, int):\n                assert int(value) == int(result)\n        elif type(value) in (int, float):\n            if type(result) in (str, int, float):\n                assert int(value) == int(result)\n            else:\n                assert None\n        elif type(value) == list:\n            assert format_number(value) == format_number(result)\n        else:\n>           assert value == result\nE           AssertionError\n\nsupport/base_test/AssertMethod.py:94: AssertionError"}, "attachments": [{"name": "log", "source": "42660f41-9755-4769-a329-ba2390a8b8d3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "variable", "value": "{'input': {'id': 1, 'operator': {'id': 1}, 'time': 1600227948453, 'shelf': 'shelf_p521j', 'factory': 'factory_5088f', 'reason': '设备维修', 'thingRepair': {'id': 1}, 'thingMaintenance': {'id': 1}, 'details': [{'sparePart': {'id': 2}, 'number': 1, 'reason': 'reason_b7x12'}, {'sparePart': {'id': 3}, 'number': 1, 'reason': 'reason_kn2we'}, {'sparePart': {'id': 1}, 'number': 1, 'reason': 'reason_nlcdx'}], 'addition': '[{\"key\": \"7d2f6d619a954f64b6fd763335b479b1\", \"value\": \"\\\\u5355\\\\u884c\\\\u6587\\\\u5b57_q36of\"}, {\"key\": \"3891e218092945d2ad9ed32961b8a6df\", \"value\": \"\\\\u591a\\\\u884c\\\\u6587\\\\u5b57_ex0qo\"}, {\"key\": \"7484ee5382f440bdb77801a366d1dc7b\", \"value\": \"\\\\u8054\\\\u7cfb\\\\u65b9\\\\u5f0f_sdakl\"}, {\"key\": \"44f76301e7dd4b9691ef03f27b1dc40e\", \"value\": 1600227948454}, {\"key\": \"30e00084de5541739cb5381e6d3ca7f8\", \"value\": 1600227948454}, {\"key\": \"9aaf842c0aed4f78aa3f6395bd93de57\", \"value\": 1600227948454}, {\"key\": \"3b5835e60f154c109e0a2b63f7029dd5\", \"value\": \"\\\\u63cf\\\\u8ff0\\\\u6587\\\\u5b57_i97zk\"}, {\"key\": \"1a36612b403e4d4eb849da443f02171d\", \"value\": \"1\"}, {\"key\": \"f526dce640ca45578314faa651101286\", \"value\": [\"1\", \"1\", \"5\"]}, {\"key\": \"6549b744f3cc4220af6dd57e4a6f433d\", \"value\": 1.01}, {\"key\": \"5d67a40062e541039cc329e56e1e5326\", \"value\": 1.01}, {\"key\": \"d74fd241aa3f44d9aa93fd5c8508acb6\", \"value\": 1.01}, {\"key\": \"8bf709e943334dd883f00b2f1120ea88\", \"value\": \"\\\\u8054\\\\u7cfb\\\\u65b9\\\\u5f0f-\\\\u6d4b\\\\u8bd5\\\\u5fc5\\\\u586b\\\\u9879/\\\\u9ed8\\\\u8ba4\\\\u5185\\\\u5bb9_80dnn\"}, {\"key\": \"e5e269044ba94b82863775af49fe8ff8\", \"value\": \"\\\\u6587\\\\u5b57-\\\\u9650\\\\u5b57\\\\u65702-100_39yju\"}]'}}"}], "start": 1600227980924, "stop": 1600227982338, "uuid": "499681a3-84cc-4392-9e86-d2a8ccc98d60", "historyId": "9c8e0edcf741bde9a6022edb6596feca", "testCaseId": "b9b9e9387790de5813a8fe4f4b8e9e2d", "fullName": "interface.sparePartOutBound_test.test_updateSparePartOutbound.TestUpdateSparePartOutbound#test_1", "labels": [{"name": "story", "value": "所有项完整"}, {"name": "epic", "value": "sparePartOutBound"}, {"name": "feature", "value": "updateSparePartOutbound"}, {"name": "parentSuite", "value": "interface.sparePartOutBound_test"}, {"name": "suite", "value": "test_updateSparePartOutbound"}, {"name": "subSuite", "value": "TestUpdateSparePartOutbound"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "99506-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "interface.sparePartOutBound_test.test_updateSparePartOutbound"}]}